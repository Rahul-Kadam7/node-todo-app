name: Node.js CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Tests (skip if not defined)
        run: |
          if npm run | grep -q " test"; then
            echo "Running tests..."
            npm test
          else
            echo "No test script found. Skipping..."
          fi

      - name: Build App (skip if not defined)
        run: |
          if npm run | grep -q " build"; then
            echo "Building app..."
            npm run build
          else
            echo "No build script found. Skipping..."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to your app folder (clone if not exists)
            cd ~/node-todo-app || git clone https://github.com/Rahul-Kadam7/node-todo-app.git ~/node-todo-app && cd ~/node-todo-app

            # Pull latest changes
            git fetch origin main
            git reset --hard origin/main

            # Ensure docker-compose is installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Stop old containers and rebuild
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
